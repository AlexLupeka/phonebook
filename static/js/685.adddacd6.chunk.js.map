{"version":3,"file":"static/js/685.adddacd6.chunk.js","mappings":"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","sources":["components/App/App.styled.jsx","components/ContactsList/ContactsList.styled.jsx","redux/contacts/selectors.jsx","components/ContactsList/ContactsList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Contacts/ContactsForm.styled.jsx","components/Contacts/ContactsForm.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","pages/Contacts.styled.jsx","pages/Contacts.jsx"],"sourcesContent":["import style from '@emotion/styled';\n\nexport const Container = style.div`\n  display: flex;\n  flex-direction: column;\n  margin: 0px auto;\n  // width: 500px;\n  height: 100%;\n  align-items: center;\n  // background-color: #ffffff;\n  // border-radius: 15px;\n  // box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,\n  // rgba(0, 0, 0, 0.3) 0px 30px 60px -30px;\n  overflow: hidden;\n  z-index: -1;\n  // background-color: #d5dde8d9;\n  padding: 50px 20px 50px 20px;\n`;\n\n// export const Container = style.div`\n// display: flex;`;\n","import style from '@emotion/styled';\n\nexport const ContactList = style.ul`\npadding: 0;\n  color: black;\n  font-weight: 500;\n  font-size: 18px;`;\n\nexport const ContactItem = style.li`\nmargin: 0 auto;\n  width: 320px;\n  display: flex;\n  justify-content: space-between;\n  `;\nexport const ContactName = style.p`\nmargin: 5px 0 5px 0;\nfont-size: 20px;`;\n\nexport const ContactNumber = style.span`\nfont-size: 20px;\n  font-weight: 800;`;\nexport const ContactButton = style.button`\n  width: 80px;\n  height: 30px;\n  cursor: pointer;\n  display: inline-block;\n  margin: 5px 0 5px 0;\n  background-color: #ff6b08;\n  border: none;\n  border-radius: 15px;\n  text-transform: uppercase;\n  color: white;\n  outline: none;\n  transition: all 250ms ease-in-ou;\n  &:hover {\n  background-color: #FF0000;\n}`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectFilter, selectContacts],\n  (filter, items) => {\n    const normalizedFilter = filter.toLowerCase();\n    return items.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport {\n  ContactList,\n  ContactItem,\n  ContactName,\n  ContactButton,\n  ContactNumber,\n} from './ContactsList.styled';\nimport { selectVisibleContacts } from '../../redux/contacts/selectors';\n\nexport default function ListForm() {\n  const dispatch = useDispatch();\n\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <ContactList>\n      {visibleContacts.map(({ id, name, number }) => (\n        <ContactItem key={name}>\n          <ContactName>\n            {name}: <ContactNumber>{number}</ContactNumber>\n          </ContactName>\n          <ContactButton\n            type=\"button\"\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            Delete\n          </ContactButton>\n        </ContactItem>\n      ))}\n    </ContactList>\n  );\n}\n\nListForm.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import style from '@emotion/styled';\n\nexport const FilterLabel = style.ul`\ndisplay: block;\npadding: 0;\nmargin: 5px 0 30px 0px;\n  color: black;\n  font-weight: 600;\n  font-size: 25px;\n  text-align: center;`;\n\nexport const FilterInput = style.input`\ndisplay: block;\n  margin: 0 auto;\n  padding: 10px;\n  width: 320px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 15px;\n  cursor: pointer;\n  font-size: 15px;\n  &:focus {\n  outline-color: orange;\n}`;\n","import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from '../../redux/contacts/selectors';\nimport { setFilter } from '../../redux/contacts/filterSlice';\nimport { FilterLabel, FilterInput } from './Filter.styled';\n\nexport default function Filter() {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const changeFilter = e => {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n\n  return (\n    <FilterLabel>\n      <FilterInput\n        type=\"text\"\n        value={filter}\n        onChange={changeFilter}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For\n      example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        placeholder=\"🔍 Find contacts by name\"\n      />\n    </FilterLabel>\n  );\n}\n\nFilter.prototype = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import style from '@emotion/styled';\n\nexport const ContactForm = style.form`\nmargin: 0 0 20px 0;`;\n\nexport const ContactLabel = style.label`\n  display: block;\n  margin-bottom: 20px;\n  // padding-left: 30%;\n  color: black;\n  font-weight: 500;\n  font-size: 20px;`;\n\nexport const ContactInput = style.input`\ndisplay: block;\n  margin-top: 10px;\n  padding: 10px;\n  width: 320px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 15px;\n  cursor: pointer;\n  font-size: 15px;\n  &:focus {\n  outline-color: #ff6b08;\n}`;\n\nexport const ContactButton = style.button`\nposition: relative;\nleft: 50%;\ntransform: translate(-50%, 0);\npadding: 10px 20px;\n  background-color: #ff6b08;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  border-radius: 4px;\n  border: none;\n  border-radius: 15px;\n  outline: none;\n  transition: all 200ms ease-in-out;\n  cursor: pointer;\n  color: #fff;\n  font-weight: 700;\n  font-size: 16px;\n  text-transform: uppercase;\n  &:hover {\n  background-color: #FF0000;\n}`;\n","import { useState } from 'react';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport {\n  ContactForm,\n  ContactLabel,\n  ContactInput,\n  ContactButton,\n} from './ContactsForm.styled';\nimport { Container } from '../App/App.styled';\n\nexport default function Form() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const changeName = e => {\n    setName(e.target.value);\n  };\n\n  const handleChange = e => {\n    setNumber(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (contacts.find(item => item.name.toLowerCase() === name.toLowerCase())) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    if (\n      contacts.find(item => item.number.toLowerCase() === number.toLowerCase())\n    ) {\n      alert(`${number} is already in contacts`);\n      return;\n    }\n    dispatch(\n      addContact({\n        name,\n        number,\n      })\n    );\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Container>\n      <ContactForm onSubmit={handleSubmit}>\n        <ContactLabel>\n          <ContactInput\n            type=\"text\"\n            name=\"name\"\n            onChange={changeName}\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            placeholder=\"🙍‍♂️ Name\"\n          />\n        </ContactLabel>\n        <ContactLabel>\n          <ContactInput\n            type=\"tel\"\n            name=\"number\"\n            onChange={handleChange}\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            placeholder=\"☎️ Number\"\n          />\n        </ContactLabel>\n        <ContactButton type=\"submit\">Add contact</ContactButton>\n      </ContactForm>\n    </Container>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const SectionTitle = styled.h2`\n  text-align: center;\n  margin-top: 15px;\n  margin-bottom: 15px;\n  font-size: 30px;\n  color: rgb(26, 45, 94);\n  text-transform: uppercase;\n`;\n","import PropTypes from 'prop-types';\nimport { SectionTitle } from './Section.styled';\n\nexport default function Section({ title, children }) {\n  return (\n    <>\n      <SectionTitle>{title}</SectionTitle>\n      {children}\n    </>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import style from '@emotion/styled';\n\nexport const LoaderImg = style.div`\nposition: fixed;\ntop: 40%;\nleft: 40%;\nmargin: auto;\nz-index: 2;\n`;\n","import { ColorRing } from 'react-loader-spinner';\nimport { LoaderImg } from './Loader.styled';\n\nexport default function Loader() {\n  return (\n    <LoaderImg>\n      <ColorRing\n        visible={true}\n        height=\"300\"\n        width=\"300\"\n        ariaLabel=\"blocks-loading\"\n        wrapperStyle={{}}\n        wrapperClass={{}}\n        colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n      />\n    </LoaderImg>\n  );\n}\n","import style from '@emotion/styled';\n\nexport const Container = style.div`\nborder-radius: 15px;\n    box-shadow: rgb(50 50 93 / 25%) 0px 50px 100px -20px, rgb(0 0 0 / 30%) 0px 30px 60px -30px;\n    overflow: hidden;\n    z-index: -1;\n    background-color: rgba(213, 221, 232, 0.85);`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport ListForm from 'components/ContactsList/ContactsList';\nimport Filter from 'components/Filter/Filter';\nimport Form from 'components/Contacts/ContactsForm';\nimport Section from 'components/Section';\nimport Loader from 'components/Loader';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport { Container } from './Contacts.styled';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <Section title=\"Phonebook\">\n        <Form />\n      </Section>\n      <Section title=\"\">\n        {isLoading && !error && <Loader />}\n        <Filter />\n        <ListForm />\n      </Section>\n    </Container>\n  );\n}\n"],"names":["Container","style","ContactList","ContactItem","ContactName","ContactNumber","ContactButton","selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","normalizedFilter","toLowerCase","contact","name","includes","ListForm","dispatch","useDispatch","visibleContacts","useSelector","map","id","number","type","onClick","deleteContact","FilterLabel","FilterInput","Filter","value","onChange","e","setFilter","currentTarget","pattern","title","required","placeholder","prototype","PropTypes","ContactForm","ContactLabel","ContactInput","Form","useState","setName","setNumber","onSubmit","preventDefault","find","item","alert","addContact","target","SectionTitle","styled","Section","children","LoaderImg","Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","Contacts","useEffect","fetchContacts","Helmet"],"sourceRoot":""}